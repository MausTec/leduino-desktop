[{"E:\\Documents\\Projects\\leduino-desktop\\src\\App.js":"1","E:\\Documents\\Projects\\leduino-desktop\\src\\components\\ConnectionForm\\index.js":"2","E:\\Documents\\Projects\\leduino-desktop\\src\\lib\\LEDuino\\LEDuinoSerialConnection.js":"3","E:\\Documents\\Projects\\leduino-desktop\\src\\utils\\e.js":"4","E:\\Documents\\Projects\\leduino-desktop\\src\\lib\\LEDuino\\index.js":"5","E:\\Documents\\Projects\\leduino-desktop\\src\\index.js":"6","E:\\Documents\\Projects\\leduino-desktop\\src\\components\\LEDuinoProvider.js":"7"},{"size":1918,"mtime":1606718708439,"results":"8","hashOfConfig":"9"},{"size":2051,"mtime":1606691479247,"results":"10","hashOfConfig":"9"},{"size":1833,"mtime":1606692160324,"results":"11","hashOfConfig":"9"},{"size":206,"mtime":1606691595329,"results":"12","hashOfConfig":"9"},{"size":1733,"mtime":1606719347578,"results":"13","hashOfConfig":"9"},{"size":388,"mtime":1606718398418,"results":"14","hashOfConfig":"9"},{"size":1145,"mtime":1606718782772,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"i17bzv",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Documents\\Projects\\leduino-desktop\\src\\App.js",["31","32","33","34","35","36"],"E:\\Documents\\Projects\\leduino-desktop\\src\\components\\ConnectionForm\\index.js",["37","38"],"import React, {useEffect, useState} from 'react'\r\nimport {Button, Col, Icon, Row, Select} from \"react-materialize\";\r\nimport LEDuinoSerialConnection from \"../../lib/LEDuino/LEDuinoSerialConnection\";\r\nimport e from \"../../utils/e\";\r\n\r\nconst ConnectionForm = ({ onConnect }) => {\r\n    const [path, setPath] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [ports, setPorts] = useState([]);\r\n\r\n    const refreshPorts = () => {\r\n        setLoading(true);\r\n        LEDuinoSerialConnection.listPorts().then(list => {\r\n            setPorts(list);\r\n            setLoading(false);\r\n\r\n            if (!path && list.length > 0) {\r\n                setPath(list[0].path);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(refreshPorts, []);\r\n\r\n    return (\r\n        <form onSubmit={e(onConnect, () => [path])}>\r\n            <div className={'card'}>\r\n                <div className={'card-content'}>\r\n                    <div className={'card-title center'}>Connect to LEDuino</div>\r\n                    <Row style={{ margin: '0.5rem -0.75rem 0 -0.75rem'}}>\r\n                        <Select id={'port'} s={10} label={'Serial Port'} onChange={e => setPath(e.target.value)}>\r\n                            { loading ? <option key={'loading'} value={\"\"} disabled>Loading...</option> : <option key={'select'} value={\"\"} disabled>Select Port</option> }\r\n                            { ports.map((p, i) => <option key={i} value={p.path}>{p.path}: {p.manufacturer}</option>) }\r\n                        </Select>\r\n                        <Col s={2}>\r\n                            <a href={'#'} onClick={e(refreshPorts)} className={'match-input ghost-text right-align'}>\r\n                                <Icon>refresh</Icon>\r\n                            </a>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button type={\"submit\"} className={'block'} disabled={!path}>Connect { path && `to ${path}`}</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ConnectionForm;","E:\\Documents\\Projects\\leduino-desktop\\src\\lib\\LEDuino\\LEDuinoSerialConnection.js",[],"E:\\Documents\\Projects\\leduino-desktop\\src\\utils\\e.js",[],"E:\\Documents\\Projects\\leduino-desktop\\src\\lib\\LEDuino\\index.js",[],"E:\\Documents\\Projects\\leduino-desktop\\src\\index.js",[],"E:\\Documents\\Projects\\leduino-desktop\\src\\components\\LEDuinoProvider.js",[],{"ruleId":"39","severity":1,"message":"40","line":2,"column":9,"nodeType":"41","messageId":"42","endLine":2,"endColumn":13},{"ruleId":"39","severity":1,"message":"43","line":2,"column":15,"nodeType":"41","messageId":"42","endLine":2,"endColumn":18},{"ruleId":"39","severity":1,"message":"44","line":2,"column":33,"nodeType":"41","messageId":"42","endLine":2,"endColumn":39},{"ruleId":"39","severity":1,"message":"45","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":15},{"ruleId":"39","severity":1,"message":"46","line":15,"column":18,"nodeType":"41","messageId":"42","endLine":15,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":52,"column":25,"nodeType":"49","endLine":52,"endColumn":49},{"ruleId":"50","severity":1,"message":"51","line":23,"column":29,"nodeType":"52","endLine":23,"endColumn":31,"suggestions":"53"},{"ruleId":"47","severity":1,"message":"54","line":36,"column":29,"nodeType":"49","endLine":36,"endColumn":118},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Select' is defined but never used.","'LEDuino' is defined but never used.","'setLive' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["55"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"56","fix":"57"},"Update the dependencies array to be: [path]",{"range":"58","text":"59"},[755,757],"[path]"]